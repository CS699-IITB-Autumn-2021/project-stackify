
"""
views.py
-------------------------------------------------------------------------------------------
Takes the request from urls.py and returns the corresponding views to the user on front end. View is responsible for all the operations being performed during the transfer of control from one webpage to another.
"""

from django.shortcuts import render
from django.http import HttpResponse
from jobHunt.models import Job
# Create your views here.
def index(request):
    """
    Redirect the user to the index.html page that is home page of the website.
    
    :param name: request - request generated by the user.
    :param type: object of HttpRequest
    
    :return: response - index.html page
    :return type: HttpResponse
    """
    return render(request,"index.html")

def search(request):
    """
    Provide the user with the list of job search result on the page search.html.
    
    :param name: request - request generated by the user.
    :param type: object of HttpRequest
    
    :return: response - search.html page
    :return type: HttpResponse
    """
    role=request.GET.get("role")
    city=request.GET.get("city")
    print(role,city)
    res_jobs=Job.objects.filter(tag=role,location=city)
    jobs=[]
    for job in res_jobs:
        if int(job.experience)<2:
            exp=job.experience+" year"
        else:
            exp=job.experience+" years"
        jobs.append({"name":job.job_title,"company":job.company,"loc":job.location,"sal":job.salary_range,"link":job.link,"exp":exp,
        "content":job.content
        })
    print(jobs)
    return render(request,"search.html",{'jobs':jobs})

def login(request):
    """
    Redirect the user to the login.html page where user can give his credential to login.
    
    :param name: request - request generated by the user.
    :param type: object of HttpRequest
    
    :return: response - index.html page
    :return type: HttpResponse
    """
    return render(request,"login.html")

def verify_login(request):
    """
    Verify the credentials provided by the user and log him in if correct else redirect to the same page.
    
    :param name: request - request generated by the user.
    :param type: object of HttpRequest
    
    :return: response - index.html, login.html
    :return type: HttpResponse
    """
    return render(request,"index.html")

def register(request):
    """
    Redirect the user to the register.html page where user can give his details and create a new account for the website.
    
    :param name: request - request generated by the user.
    :param type: object of HttpRequest
    
    :return: response - index.html page
    :return type: HttpResponse
    """
    return render(request,"register.html")

def verify_register(request):
    """
    Verify if the user is a new user or existing one if new then register him log him in and redirect to the index.html else give register.html.
    
    :param name: request - request generated by the user.
    :param type: object of HttpRequest
    
    :return: response - index.html,register.html
    :return type: HttpResponse
    """
    return render(request,"index.html")

def update(request):
    """
    Redirect the user to the register.html page where user can give his details and create a new account for the website.
    
    :param name: request - request generated by the user.
    :param type: object of HttpRequest
    
    :return: response - index.html page
    :return type: HttpResponse
    """
    return render(request,"update.html")
    
def make_update(request):
    """
    Make changes made by the user in the update form.
    
    :param name: request - request generated by the user.
    :param type: object of HttpRequest
    
    :return: response - index.html page
    :return type: HttpResponse
    """
    return render(request,"index.html")

